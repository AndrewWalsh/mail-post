{
  "name": "mail-post",
  "productName": "MailPost",
  "version": "0.0.0",
  "description": "Send bulk email campaigns easily using Electron & Serverless",
  "author": {
    "name": "Andrew",
    "email": "andrew.ghc101@gmail.com",
    "url": "https://github.com/andrewghc"
  },
  "homepage": "https://github.com/AndrewGHC/mail-post",
  "repository": {
    "url": "https://github.com/AndrewGHC/mail-post"
  },
  "scripts": {
    "clean": "rimraf node_modules app/node_modules dll ./*.sqlite3 release ./app/worker/dist ./app/renderer/dist",
    "postinstall": "npm run build-dll && electron-builder install-app-deps && node node_modules/fbjs-scripts/node/check-dev-engines.js package.json && npm run npm-rebuild && npm run create-db",
    "build": "npm run create-db && npm-run-all --parallel build-main build-renderer",
    "build-dll": "cross-env NODE_ENV=development webpack --config webpack.config.renderer.dev.dll.babel.js --colors",
    "build-main": "cross-env NODE_ENV=production webpack --config webpack.config.main.prod.babel.js --colors",
    "build-renderer": "cross-env NODE_ENV=production webpack --config webpack.config.renderer.prod.babel.js --colors",
    "coveralls": "npm run test -- --coverageReporters=text-lcov | coveralls",
    "dev": "npm run create-db && cross-env START_HOT=1 node -r @babel/register ./internals/scripts/CheckPortInUse.js && cross-env START_HOT=1 npm run start-renderer-dev",
    "electron-rebuild": "electron-rebuild --parallel --force --types prod,dev,optional --module-dir app",
    "lint": "cross-env NODE_ENV=development eslint --ext .jsx --ext .js --cache --format=node_modules/eslint-formatter-pretty .",
    "lint-styles": "stylelint app/*.css app/components/*.css --syntax scss",
    "lint-styles-fix": "stylefmt -r app/*.css app/components/*.css",
    "package": "rimraf ./production-db.sqlite3 release && npm run build && build --publish never",
    "package-all": "npm run build && build -mwl",
    "package-linux": "npm run build && build --linux",
    "package-win": "npm run build && build --win --x64",
    "start": "cross-env NODE_ENV=production electron app",
    "start-main-dev": "cross-env HOT=1 NODE_ENV=development electron -r @babel/register ./app/main.dev",
    "start-renderer-dev": "cross-env NODE_ENV=development node --trace-warnings -r @babel/register ./node_modules/webpack-dev-server/bin/webpack-dev-server --config webpack.config.renderer.dev.babel.js",
    "test": "cross-env NODE_ENV=test jest app --config ./test/jest.config.unit.js --coverage",
    "test-e2e": "cross-env ELECTRON_DISABLE_SECURITY_WARNINGS=true NODE_ENV=test BABEL_DISABLE_CACHE=1 node --trace-warnings -r @babel/register ./internals/scripts/RunElectronTests.js . --config ./test/jest.config.electron.js --runInBand",
    "test-all": "npm-run-all --parallel lint test build && npm run test-e2e",
    "npm-rebuild": "node -r @babel/register ./internals/scripts/NpmRebuild.js",
    "create-db": "rimraf ./*.sqlite3 && cross-env node -r @babel/register ./internals/scripts/CreateDb.js",
    "release": "build --publish always"
  },
  "browserslist": "electron 1.8",
  "build": {
    "productName": "MailPost",
    "appId": "org.andrewghc.MailPost",
    "files": [
      "renderer/dist/",
      "renderer/renderer.html",
      "worker/dist/",
      "worker/worker.html",
      "main/config",
      "main/models",
      "main/migrations",
      "main.prod.js",
      "main.prod.js.map",
      "node_modules/",
      "package.json"
    ],
    "extraResources": [
      {
        "from": "./production-db.sqlite3",
        "to": "./production-db.sqlite3"
      }
    ],
    "dmg": {
      "contents": [
        {
          "x": 130,
          "y": 220
        },
        {
          "x": 410,
          "y": 220,
          "type": "link",
          "path": "/Applications"
        }
      ],
      "title": "MailPost"
    },
    "win": {
      "target": [
        "nsis"
      ]
    },
    "linux": {
      "target": [
        "deb",
        "AppImage"
      ],
      "category": "Office"
    },
    "directories": {
      "buildResources": "resources",
      "output": "release"
    }
  },
  "license": "GPL-3.0",
  "keywords": [
    "mail",
    "bulk",
    "react",
    "redux",
    "electron",
    "serverless"
  ],
  "devDependencies": {
    "@babel/core": "^7.1.2",
    "@babel/plugin-proposal-class-properties": "^7.1.0",
    "@babel/plugin-proposal-object-rest-spread": "^7.0.0",
    "@babel/plugin-transform-react-constant-elements": "^7.0.0",
    "@babel/plugin-transform-react-inline-elements": "^7.0.0",
    "@babel/preset-env": "^7.1.0",
    "@babel/preset-react": "^7.0.0",
    "@babel/preset-stage-0": "^7.0.0",
    "@babel/register": "^7.0.0",
    "babel-core": "^7.0.0-bridge",
    "babel-jest": "^23.6.0",
    "babel-loader": "^8.0.4",
    "babel-plugin-styled-components": "^1.8.0",
    "babel-plugin-transform-react-remove-prop-types": "^0.4.19",
    "chalk": "^2.4.1",
    "coveralls": "^3.0.2",
    "cross-env": "^5.2.0",
    "cross-spawn": "^6.0.5",
    "css-loader": "^1.0.1",
    "detect-port": "^1.2.3",
    "electron": "^11.5.0",
    "electron-builder": "^20.28.4",
    "electron-devtools-installer": "^2.2.4",
    "electron-rebuild": "^1.8.2",
    "enzyme": "^3.7.0",
    "enzyme-adapter-react-16": "^1.6.0",
    "enzyme-to-json": "^3.3.4",
    "eslint": "^5.8.0",
    "eslint-config-airbnb": "^17.1.0",
    "eslint-formatter-pretty": "^1.3.0",
    "eslint-import-resolver-webpack": "^0.10.1",
    "eslint-plugin-compat": "^2.6.3",
    "eslint-plugin-import": "^2.14.0",
    "eslint-plugin-jest": "^21.27.0",
    "eslint-plugin-jsx-a11y": "^6.1.2",
    "eslint-plugin-promise": "^4.0.1",
    "eslint-plugin-react": "^7.11.1",
    "fbjs-scripts": "^1.0.1",
    "file-loader": "^2.0.0",
    "husky": "^1.1.3",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^23.6.0",
    "jest-fetch-mock": "^1.6.6",
    "jest-styled-components": "^6.2.2",
    "minimist": "^1.2.0",
    "mock-fs": "^4.7.0",
    "node-sass": "^4.9.4",
    "npm-logical-tree": "^1.2.1",
    "npm-run-all": "^4.1.3",
    "react-mock-router": "^1.0.15",
    "react-test-renderer": "^16.6.0",
    "redux-logger": "^3.0.6",
    "redux-mock-store": "^1.5.3",
    "rimraf": "^2.6.2",
    "sass-loader": "^7.1.0",
    "spectron": "^5.0.0",
    "style-loader": "^0.23.1",
    "stylefmt": "^6.0.3",
    "stylelint": "^9.7.1",
    "stylelint-config-standard": "^18.2.0",
    "terser-webpack-plugin": "^1.1.0",
    "url-loader": "^1.1.2",
    "uuid": "^3.3.2",
    "webpack": "^4.24.0",
    "webpack-bundle-analyzer": "^3.0.3",
    "webpack-cli": "^3.1.2",
    "webpack-dev-server": "^3.1.10",
    "webpack-merge": "^4.1.4"
  },
  "dependencies": {
    "@material-ui/core": "^3.3.2",
    "@material-ui/icons": "^3.0.1",
    "apollo-cache-inmemory": "^1.3.9",
    "apollo-client": "^2.4.5",
    "apollo-link": "^1.2.3",
    "apollo-link-error": "^1.1.1",
    "apollo-link-http": "^1.5.5",
    "apollo-link-state": "^0.4.2",
    "apollo-link-ws": "^1.0.9",
    "apollo-server-express": "^2.0.0-rc.12",
    "continuation-local-storage": "^3.2.1",
    "csv-parser": "^2.1.0",
    "devtron": "^1.4.0",
    "electron-debug": "2.0.0",
    "electron-log": "^2.2.17",
    "extract-text-webpack-plugin": "^4.0.0-beta.0",
    "font-awesome": "^4.7.0",
    "graphql": "^0.13.0",
    "graphql-tag": "^2.10.0",
    "history": "^4.7.2",
    "isemail": "^3.2.0",
    "moment": "^2.22.2",
    "normalize.css": "^8.0.0",
    "ramda": "^0.25.0",
    "react": "^16.6.0",
    "react-apollo": "^2.2.4",
    "react-dom": "^16.6.0",
    "react-hot-loader": "^4.3.12",
    "react-redux": "^5.1.0",
    "react-router": "^4.3.1",
    "react-router-dom": "^4.3.1",
    "react-router-redux": "^5.0.0-alpha.6",
    "redux": "^4.0.1",
    "redux-form": "^7.4.2",
    "redux-form-material-ui": "^5.0.0-beta.3",
    "redux-saga": "^0.16.2",
    "sequelize-mock": "^0.10.2",
    "source-map-support": "^0.5.9",
    "styled-components": "^4.0.3",
    "typeface-roboto": "^0.0.54"
  },
  "devEngines": {
    "node": ">=8.x",
    "npm": ">=4.x",
    "yarn": ">=0.21.3"
  },
  "husky": {
    "hooks": {
      "pre-commit": "npm run lint",
      "pre-push": "npm run test-all"
    }
  },
  "jest": {
    "moduleNameMapper": {
      "electron": "<rootDir>/test/mocks/electronMock.js"
    }
  }
}
